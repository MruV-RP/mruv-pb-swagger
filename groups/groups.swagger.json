{
  "swagger": "2.0",
  "info": {
    "title": "groups/groups.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/groups": {
      "get": {
        "summary": "Get all groups.",
        "operationId": "MruVGroupsService_GetGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsGetGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "beginFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      },
      "post": {
        "summary": "Create a group.",
        "operationId": "MruVGroupsService_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsCreateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MruVGroupsService"
        ]
      }
    },
    "/v1/groups/members/{memberId}/permitted": {
      "get": {
        "summary": "Check is member of a group is permitted to do specific action.",
        "operationId": "MruVGroupsService_IsPermitted",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsIsPermittedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "memberType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MEMBER_TYPE_UNKNOWN",
              "MEMBER_TYPE_ACCOUNT",
              "MEMBER_TYPE_CHARACTER"
            ],
            "default": "MEMBER_TYPE_UNKNOWN"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      }
    },
    "/v1/groups/status": {
      "get": {
        "summary": "Service status",
        "operationId": "MruVGroupsService_GetServiceStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonServiceStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MruVGroupsService"
        ]
      }
    },
    "/v1/groups/version": {
      "get": {
        "operationId": "MruVGroupsService_GetServiceVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MruVGroupsService"
        ]
      }
    },
    "/v1/groups/{groupId}": {
      "get": {
        "summary": "Get a  group.",
        "operationId": "MruVGroupsService_GetGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsGetGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      },
      "delete": {
        "summary": "Delete a group.",
        "operationId": "MruVGroupsService_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsDeleteGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      },
      "patch": {
        "summary": "Update a group.",
        "operationId": "MruVGroupsService_UpdateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsUpdateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      }
    },
    "/v1/groups/{groupId}/members": {
      "get": {
        "summary": "Get a group member.",
        "operationId": "MruVGroupsService_GetMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsGetMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      }
    },
    "/v1/groups/{groupId}/members/{memberId}": {
      "delete": {
        "summary": "Remove a group member.",
        "operationId": "MruVGroupsService_RemoveMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsRemoveMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      },
      "post": {
        "summary": "Add a group member.",
        "operationId": "MruVGroupsService_AddMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsAddMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      }
    },
    "/v1/groups/{groupId}/owner": {
      "get": {
        "summary": "Get group owner.",
        "operationId": "MruVGroupsService_GetOwner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsGetOwnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      },
      "put": {
        "summary": "Assign an owner. Group can have only one owner. Owner can be a player, a group or an account.",
        "operationId": "MruVGroupsService_AssignOwner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsAssignOwnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      }
    },
    "/v1/groups/{groupId}/permissions": {
      "get": {
        "summary": "Get all group permissions.",
        "operationId": "MruVGroupsService_GetPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsGetPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      },
      "delete": {
        "summary": "Remove group permission.",
        "operationId": "MruVGroupsService_RemovePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsRemovePermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "permissionId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      },
      "post": {
        "summary": "Add a permission to a group.",
        "operationId": "MruVGroupsService_AddPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsAddPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      }
    },
    "/v1/groups/{groupId}/subgroups": {
      "get": {
        "summary": "Get all subgroups.",
        "operationId": "MruVGroupsService_GetSubgroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsGetSubgroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      }
    },
    "/v1/groups/{groupId}/subgroups/{subgroupId}": {
      "delete": {
        "summary": "Remove a subgroup from group.",
        "operationId": "MruVGroupsService_RemoveSubgroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsRemoveSubgroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "subgroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      },
      "post": {
        "summary": "Add a subgroup to a group.",
        "operationId": "MruVGroupsService_AddSubgroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/groupsAddSubgroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "subgroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGroupsService"
        ]
      }
    }
  },
  "definitions": {
    "GetGroupsResponseGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "GetPermissionsResponsePermission": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        }
      }
    },
    "commonServiceStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "commonVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "buildDate": {
          "type": "string"
        },
        "commit": {
          "type": "string"
        },
        "osArch": {
          "type": "string"
        }
      }
    },
    "groupsAddMemberResponse": {
      "type": "object",
      "description": "Response message for rpc `AddMember`."
    },
    "groupsAddPermissionResponse": {
      "type": "object",
      "properties": {
        "permissionId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Response message for rpc `AddPermission`."
    },
    "groupsAddSubgroupResponse": {
      "type": "object",
      "description": "Response message for rpc `AddSubgroup`."
    },
    "groupsAssignOwnerResponse": {
      "type": "object",
      "description": "Response message for rpc `AssignOwner`."
    },
    "groupsCreateGroupResponse": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Response message for rpc `CreateGroup`."
    },
    "groupsDeleteGroupResponse": {
      "type": "object",
      "description": "Response message for rpc `DeleteGroup`."
    },
    "groupsGetGroupResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "description": "Response message for rpc `GetGroup`."
    },
    "groupsGetGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetGroupsResponseGroup"
          }
        }
      },
      "description": "Response message for rpc `GetGroups`."
    },
    "groupsGetMembersResponse": {
      "type": "object",
      "properties": {
        "memberType": {
          "$ref": "#/definitions/groupsMemberType"
        },
        "memberIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Response message for rpc `GetMembers`."
    },
    "groupsGetOwnerResponse": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "integer",
          "format": "int64"
        },
        "ownerType": {
          "$ref": "#/definitions/groupsOwnerType"
        }
      },
      "description": "Response message for rpc `GetOwner`."
    },
    "groupsGetPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPermissionsResponsePermission"
          }
        }
      },
      "description": "Response message for rpc `GetPermissions`."
    },
    "groupsGetSubgroupsResponse": {
      "type": "object",
      "properties": {
        "subgroupIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Response message for rpc `GetSubgroups`."
    },
    "groupsIsPermittedResponse": {
      "type": "object",
      "properties": {
        "permitted": {
          "type": "boolean"
        }
      },
      "description": "Response message for rpc `IsPermitted`."
    },
    "groupsMemberType": {
      "type": "string",
      "enum": [
        "MEMBER_TYPE_UNKNOWN",
        "MEMBER_TYPE_ACCOUNT",
        "MEMBER_TYPE_CHARACTER"
      ],
      "default": "MEMBER_TYPE_UNKNOWN",
      "description": "Member type."
    },
    "groupsOwnerType": {
      "type": "string",
      "enum": [
        "OWNER_TYPE_UNKNOWN",
        "OWNER_TYPE_ACCOUNT",
        "OWNER_TYPE_CHARACTER",
        "OWNER_TYPE_GROUP"
      ],
      "default": "OWNER_TYPE_UNKNOWN",
      "description": "Owner types."
    },
    "groupsRemoveMemberResponse": {
      "type": "object",
      "description": "Response message for rpc `RemoveMember`."
    },
    "groupsRemovePermissionResponse": {
      "type": "object",
      "description": "Response message for rpc `RemovePermission`."
    },
    "groupsRemoveSubgroupResponse": {
      "type": "object",
      "description": "Response message for rpc `RemoveSubgroup`."
    },
    "groupsUpdateGroupResponse": {
      "type": "object",
      "description": "Response message for rpc `UpdateGroup`."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
