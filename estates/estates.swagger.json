{
  "swagger": "2.0",
  "info": {
    "title": "estates/estates.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/estate/{estateId}/entrances": {
      "get": {
        "summary": "Get all estate entrances.",
        "operationId": "MruVEstateService_GetEstateEntrances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesGetEstateEntrancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "estateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      }
    },
    "/v1/estate/{estateId}/gates": {
      "get": {
        "summary": "Get all estate gates.",
        "operationId": "MruVEstateService_GetEstateGates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesGetEstateGatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "estateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      }
    },
    "/v1/estates": {
      "get": {
        "summary": "Get all created real estates.",
        "operationId": "MruVEstateService_GetEstates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesGetEstatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      },
      "post": {
        "summary": "Create real estate.",
        "operationId": "MruVEstateService_CreateEstate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesCreateEstateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/estatesCreateEstateRequest"
            }
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      }
    },
    "/v1/estates/{estateId}/entrances": {
      "post": {
        "summary": "Add an entrance to estate.",
        "operationId": "MruVEstateService_AddEntrance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesAddEntranceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "estateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/estatesAddEntranceRequest"
            }
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      }
    },
    "/v1/estates/{estateId}/entrances/{entranceId}": {
      "delete": {
        "summary": "Remove an entrance from estate.",
        "operationId": "MruVEstateService_RemoveEntrance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesRemoveEntranceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "estateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "entranceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      }
    },
    "/v1/estates/{estateId}/gates": {
      "post": {
        "summary": "Add a gate to an estate.",
        "operationId": "MruVEstateService_AddGate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesAddGateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "estateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/estatesAddGateRequest"
            }
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      }
    },
    "/v1/estates/{estateId}/gates/{gateId}": {
      "delete": {
        "summary": "Delete a gate from estate.",
        "operationId": "MruVEstateService_RemoveGate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesRemoveGateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "estateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "gateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      }
    },
    "/v1/estates/{id}": {
      "get": {
        "summary": "Get real estate.",
        "operationId": "MruVEstateService_GetEstate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesEstate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      },
      "delete": {
        "summary": "Delete real estate.",
        "operationId": "MruVEstateService_DeleteEstate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesDeleteEstateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      },
      "patch": {
        "summary": "Update real estate.",
        "operationId": "MruVEstateService_UpdateEstate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/estatesUpdateEstateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/estatesUpdateEstateRequest"
            }
          }
        ],
        "tags": [
          "MruVEstateService"
        ]
      }
    }
  },
  "definitions": {
    "entrancesEntrance": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "out": {
          "$ref": "#/definitions/spotsSpot"
        },
        "in": {
          "$ref": "#/definitions/spotsSpot"
        }
      }
    },
    "estatesAddEntranceRequest": {
      "type": "object",
      "properties": {
        "estateId": {
          "type": "integer",
          "format": "int64"
        },
        "entranceId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Request message for rpc `AddEntrance`."
    },
    "estatesAddEntranceResponse": {
      "type": "object",
      "description": "Response message for rpc `AddEntrance`."
    },
    "estatesAddGateRequest": {
      "type": "object",
      "properties": {
        "estateId": {
          "type": "integer",
          "format": "int64"
        },
        "gateId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Request message for rpc `AddGate`."
    },
    "estatesAddGateResponse": {
      "type": "object",
      "description": "Response message for rpc `AddGate`."
    },
    "estatesCreateEstateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "description": "Request message for rpc `CreateEstate`."
    },
    "estatesCreateEstateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Response message for rpc `CreateEstate`."
    },
    "estatesDeleteEstateResponse": {
      "type": "object",
      "description": "Response message for rpc `DeleteEstate`."
    },
    "estatesEstate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "entrances": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "gates": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "rooms": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "estatesFetchAllEstatesResponse": {
      "type": "object",
      "properties": {
        "estates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/estatesFullEstate"
          }
        }
      },
      "description": "Response message for rpc `FetchAll`."
    },
    "estatesFullEstate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "objects": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/objectsObject"
          }
        },
        "removedBuildings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/objectsRemovedBuilding"
          }
        },
        "entrances": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/entrancesEntrance"
          }
        },
        "gates": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gatesGate"
          }
        }
      }
    },
    "estatesGetEstateEntrancesResponse": {
      "type": "object",
      "properties": {
        "entrances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entrancesEntrance"
          }
        }
      },
      "description": "Response message for rpc `GetEstateEntrances`."
    },
    "estatesGetEstateGatesResponse": {
      "type": "object",
      "properties": {
        "gates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gatesGate"
          }
        }
      },
      "description": "Response message for rpc `GetEstateGates`."
    },
    "estatesGetEstatesResponse": {
      "type": "object",
      "properties": {
        "estates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/estatesEstate"
          }
        }
      },
      "description": "Response message for rpc `GetEstates`."
    },
    "estatesRemoveEntranceResponse": {
      "type": "object",
      "description": "Response message for rpc `RemoveEntrance`."
    },
    "estatesRemoveGateResponse": {
      "type": "object",
      "description": "Response message for rpc `RemoveGate`."
    },
    "estatesUpdateEstateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "description": "Request message for rpc `UpdateEstate`."
    },
    "estatesUpdateEstateResponse": {
      "type": "object",
      "description": "Response message for rpc `UpdateEstate`."
    },
    "gatesGate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "gateObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectsMovableObject"
          }
        },
        "spot": {
          "$ref": "#/definitions/spotsSpot"
        },
        "opened": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        }
      }
    },
    "objectsMaterial": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "integer",
          "format": "int32",
          "description": "The modelid on which the replacement texture is located. Use 0 for alpha. Use -1 to change the material color without altering the texture."
        },
        "txdName": {
          "type": "string",
          "title": "The name of the txd file which contains the replacement texture (use \"none\" if not required)"
        },
        "textureName": {
          "type": "string",
          "title": "The name of the texture to use as the replacement (use \"none\" if not required)"
        },
        "materialColor": {
          "type": "integer",
          "format": "int32",
          "description": "The object color to set, as an integer or hex in ARGB color format. Using 0 keeps the existing material color."
        }
      },
      "description": "Replace the texture of an object with the texture from another model in the game."
    },
    "objectsMaterialSize": {
      "type": "string",
      "enum": [
        "OBJECT_MATERIAL_SIZE_0",
        "OBJECT_MATERIAL_SIZE_32X32",
        "OBJECT_MATERIAL_SIZE_64X32",
        "OBJECT_MATERIAL_SIZE_64X64",
        "OBJECT_MATERIAL_SIZE_128X32",
        "OBJECT_MATERIAL_SIZE_128X64",
        "OBJECT_MATERIAL_SIZE_128X128",
        "OBJECT_MATERIAL_SIZE_256X32",
        "OBJECT_MATERIAL_SIZE_256X64",
        "OBJECT_MATERIAL_SIZE_256X128",
        "OBJECT_MATERIAL_SIZE_256X256",
        "OBJECT_MATERIAL_SIZE_512X64",
        "OBJECT_MATERIAL_SIZE_512X128",
        "OBJECT_MATERIAL_SIZE_512X256",
        "OBJECT_MATERIAL_SIZE_512X512"
      ],
      "default": "OBJECT_MATERIAL_SIZE_0"
    },
    "objectsMaterialText": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text to show on the object (MAX 2048 characters)."
        },
        "materialSize": {
          "$ref": "#/definitions/objectsMaterialSize",
          "description": "The size of the material (default: 256x128)."
        },
        "fontFace": {
          "type": "string",
          "description": "The font to use (default: Arial)."
        },
        "fontSize": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the text (default: 24) (MAX 255)."
        },
        "bold": {
          "type": "boolean",
          "description": "Bold text. Set to 1 for bold, 0 for not (default: 1)."
        },
        "fontColor": {
          "type": "integer",
          "format": "int32",
          "description": "The color of the text, in ARGB format (default: White)."
        },
        "backColor": {
          "type": "integer",
          "format": "int32",
          "description": "The background color, in ARGB format (default: None (transparent))."
        },
        "textAlignment": {
          "type": "integer",
          "format": "int32",
          "description": "The alignment of the text (default: left)."
        }
      },
      "description": "Replace the texture of an object with text."
    },
    "objectsMovableObject": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/objectsObject"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectsState"
          },
          "description": "List of states that an object can take."
        }
      },
      "description": "A movable object."
    },
    "objectsObject": {
      "type": "object",
      "properties": {
        "model": {
          "type": "integer",
          "format": "int32"
        },
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "z": {
          "type": "number",
          "format": "float"
        },
        "rx": {
          "type": "number",
          "format": "float"
        },
        "ry": {
          "type": "number",
          "format": "float"
        },
        "rz": {
          "type": "number",
          "format": "float"
        },
        "worldId": {
          "type": "integer",
          "format": "int32",
          "description": "Virtual world id for which object will be visible. Set -1 to be visible for all."
        },
        "interiorId": {
          "type": "integer",
          "format": "int32",
          "description": "Interior id for which object will be visible. Set -1 to be visible for all."
        },
        "playerId": {
          "type": "integer",
          "format": "int32",
          "description": "SA-MP player id for which object will be visible. Set -1 to be visible for all."
        },
        "areaId": {
          "type": "integer",
          "format": "int32",
          "description": "Dynamic area id for which object will be visible. Set -1 to be visible for all."
        },
        "streamDistance": {
          "type": "number",
          "format": "float",
          "title": "Default streamer setting is 300.0"
        },
        "drawDistance": {
          "type": "number",
          "format": "float",
          "title": "Default streamer setting is 0.0 = default game draw distance"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "estateId": {
          "type": "integer",
          "format": "int64"
        },
        "materials": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/objectsMaterial"
          }
        },
        "materialTexts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/objectsMaterialText"
          }
        }
      },
      "description": "SA-MP Dynamic object data structure."
    },
    "objectsRemovedBuilding": {
      "type": "object",
      "properties": {
        "model": {
          "type": "integer",
          "format": "int64",
          "description": "The model to remove."
        },
        "x": {
          "type": "number",
          "format": "float",
          "description": "The X coordinate around which the objects will be removed."
        },
        "y": {
          "type": "number",
          "format": "float",
          "description": "The Y coordinate around which the objects will be removed."
        },
        "z": {
          "type": "number",
          "format": "float",
          "description": "The Z coordinate around which the objects will be removed."
        },
        "radius": {
          "type": "number",
          "format": "float",
          "description": "The radius around the specified point to remove objects with the specified model."
        },
        "estateId": {
          "type": "integer",
          "format": "int64",
          "description": "Estate to with removed object belong."
        }
      },
      "description": "Removes a standard San Andreas model for a single player within a specified range."
    },
    "objectsState": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "z": {
          "type": "number",
          "format": "float"
        },
        "rx": {
          "type": "number",
          "format": "float"
        },
        "ry": {
          "type": "number",
          "format": "float"
        },
        "rz": {
          "type": "number",
          "format": "float"
        },
        "transitionSpeed": {
          "type": "number",
          "format": "float"
        }
      },
      "description": "Position and rotation state of moving object."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "spotsSpot": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "icon": {
          "type": "integer",
          "format": "int32"
        },
        "marker": {
          "type": "integer",
          "format": "int32"
        },
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "z": {
          "type": "number",
          "format": "float"
        },
        "vw": {
          "type": "integer",
          "format": "int32"
        },
        "int": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Spot."
    }
  }
}
