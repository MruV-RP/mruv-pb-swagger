{
  "swagger": "2.0",
  "info": {
    "title": "entrances/entrances.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/entrances": {
      "post": {
        "summary": "Create an entrance to building or teleport to location.",
        "operationId": "MruVEntrancesService_CreateEntrance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/entrancesCreateEntranceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MruVEntrancesService"
        ]
      }
    },
    "/v1/entrances/nearest": {
      "get": {
        "summary": "Find gate that is closest to a specific position.",
        "operationId": "MruVEntrancesService_FindNearestEntrance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/entrancesFindNearestEntranceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "x",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "y",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "z",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "maxDistance",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          }
        ],
        "tags": [
          "MruVEntrancesService"
        ]
      }
    },
    "/v1/entrances/{id}": {
      "get": {
        "summary": "Get an entrance to building or a teleport to location.",
        "operationId": "MruVEntrancesService_GetEntrance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/entrancesGetEntranceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEntrancesService"
        ]
      },
      "delete": {
        "summary": "Delete an entrance to building or a teleport to location.",
        "operationId": "MruVEntrancesService_DeleteEntrance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/entrancesDeleteEntranceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEntrancesService"
        ]
      },
      "patch": {
        "summary": "Update an entrance to building or a teleport to location.",
        "operationId": "MruVEntrancesService_UpdateEntrance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/entrancesUpdateEntranceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEntrancesService"
        ]
      }
    },
    "/v1/entrances/{id}/enter": {
      "post": {
        "summary": "Enter an entrance (player teleport from in spot position to out spot position).",
        "operationId": "MruVEntrancesService_Enter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/entrancesEnterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEntrancesService"
        ]
      }
    },
    "/v1/entrances/{id}/exit": {
      "post": {
        "summary": "Exit from entrance (player teleport from out spot position to in spot position).",
        "operationId": "MruVEntrancesService_Exit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/entrancesExitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEntrancesService"
        ]
      }
    },
    "/v1/entrances/{id}/lock": {
      "post": {
        "summary": "Lock entrance.",
        "operationId": "MruVEntrancesService_Lock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/entrancesLockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEntrancesService"
        ]
      }
    },
    "/v1/entrances/{id}/unlock": {
      "post": {
        "summary": "Unload entrance.",
        "operationId": "MruVEntrancesService_Unlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/entrancesUnlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVEntrancesService"
        ]
      }
    }
  },
  "definitions": {
    "entrancesCreateEntranceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Response message for rpc `CreateEntrance`."
    },
    "entrancesDeleteEntranceResponse": {
      "type": "object",
      "description": "Response message for rpc `DeleteEntrance`."
    },
    "entrancesEnterResponse": {
      "type": "object",
      "description": "Response message for rpc `Enter`."
    },
    "entrancesEntrance": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "out": {
          "$ref": "#/definitions/spotsSpot"
        },
        "in": {
          "$ref": "#/definitions/spotsSpot"
        }
      }
    },
    "entrancesExitResponse": {
      "type": "object",
      "description": "Response message for rpc `Exit`."
    },
    "entrancesFetchAllEntrancesResponse": {
      "type": "object",
      "properties": {
        "entrances": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/entrancesEntrance"
          }
        }
      },
      "description": "Response message for rpc `FetchAllEntrances`."
    },
    "entrancesFindNearestEntranceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "distance": {
          "type": "number",
          "format": "float"
        },
        "inside": {
          "type": "boolean",
          "title": "Is found entrance position is in spot (out spot otherwise)"
        }
      },
      "description": "Response message for rpc `FindNearestEntrance`."
    },
    "entrancesGetEntranceResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "inSpot": {
          "$ref": "#/definitions/spotsSpot"
        },
        "outSpot": {
          "$ref": "#/definitions/spotsSpot"
        }
      },
      "description": "Response message for rpc `GetEntrance`."
    },
    "entrancesLockResponse": {
      "type": "object",
      "description": "Response message for rpc `Lock`."
    },
    "entrancesUnlockResponse": {
      "type": "object",
      "description": "Response message for rpc `Unlock`."
    },
    "entrancesUpdateEntranceResponse": {
      "type": "object",
      "description": "Response message for rpc `UpdateEntrance`."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "spotsSpot": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "icon": {
          "type": "integer",
          "format": "int32"
        },
        "marker": {
          "type": "integer",
          "format": "int32"
        },
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "z": {
          "type": "number",
          "format": "float"
        },
        "vw": {
          "type": "integer",
          "format": "int32"
        },
        "int": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Spot."
    }
  }
}
