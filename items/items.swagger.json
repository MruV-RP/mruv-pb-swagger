{
  "swagger": "2.0",
  "info": {
    "title": "items/items.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/containerTypes": {
      "get": {
        "summary": "Get all container types.",
        "operationId": "GetContainerTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvGetContainerTypesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Limit of the returned container types.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      },
      "post": {
        "summary": "Create container type.",
        "operationId": "CreateContainerType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvContainerTypeID"
            }
          }
        },
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/containerTypes/{id}": {
      "get": {
        "summary": "Get container type by id.",
        "operationId": "GetContainerType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvContainerType"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      },
      "delete": {
        "summary": "Detele container type by id.",
        "operationId": "DeleteContainerType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvContainerTypeID"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/containers": {
      "get": {
        "summary": "Get all containers.",
        "operationId": "GetContainers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvGetContainersResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Limit of the returned containers.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      },
      "post": {
        "summary": "Create container.",
        "operationId": "CreateContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvContainerID"
            }
          }
        },
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/containers/{container_id.id}/items": {
      "get": {
        "summary": "Get items inside a container.",
        "operationId": "GetContainerItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvGetContainerItemsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "container_id.id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Limit of the returned items.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/containers/{container_id.id}/items/nearest/x/{position.x}/y/{position.y}/z/{position.z}": {
      "get": {
        "summary": "Retrieves from the container the list of items nearest to the given position.",
        "operationId": "GetNearestItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvGetNearestItemsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "container_id.id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "position.x",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "position.y",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "position.z",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "distance_limit",
            "description": "The distance over which the items are ignored.",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/containers/{container_id.id}/items/sort/{sort_by}": {
      "get": {
        "summary": "Sort items inside container.\r\nThis procedure change order of items inside container.",
        "operationId": "SortItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvSortItemsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "container_id.id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sort_by",
            "description": "Sorting mode.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "WEIGHT_DESC",
              "WEIGHT_ASC",
              "VOLUME_DESC",
              "VOLUME_ASC"
            ]
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/containers/{container_id.id}/items/{item_id.id}": {
      "delete": {
        "summary": "Pull item from container.",
        "operationId": "PullItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvItem"
            }
          }
        },
        "parameters": [
          {
            "name": "container_id.id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "item_id.id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      },
      "put": {
        "summary": "Put item into container.",
        "operationId": "PutItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvPutItemResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "container_id.id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "item_id.id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/containers/{id}": {
      "get": {
        "summary": "Get container by id.",
        "operationId": "GetContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvContainer"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      },
      "delete": {
        "summary": "Delete container by id.",
        "operationId": "DeleteContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvContainerID"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/itemTypes": {
      "get": {
        "summary": "Gets all item types.",
        "operationId": "GetItemTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvGetItemTypesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Limit of the returned item types.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      },
      "post": {
        "summary": "Create item type.",
        "operationId": "CreateItemType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvItemTypeID"
            }
          }
        },
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/itemTypes/{id}": {
      "get": {
        "summary": "Get item type by id.",
        "operationId": "GetItemType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvItemType"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      },
      "delete": {
        "summary": "Delete item type by id.",
        "operationId": "DeleteItemType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvItemTypeID"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/items": {
      "get": {
        "summary": "Gets all items.",
        "operationId": "GetItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvGetItemsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Limit of the returned items.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      },
      "post": {
        "summary": "Create new item.",
        "operationId": "CreateItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvItemID"
            }
          }
        },
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/items/status": {
      "get": {
        "summary": "Get service health status.",
        "operationId": "GetServiceStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvServiceStatusResponse"
            }
          }
        },
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/items/version": {
      "get": {
        "summary": "Get service current version.",
        "operationId": "GetServiceVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvVersionResponse"
            }
          }
        },
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/items/{id}": {
      "get": {
        "summary": "Get item by id.",
        "operationId": "GetItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvItem"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      },
      "delete": {
        "summary": "Delete item by id.",
        "operationId": "DeleteItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvItemID"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      }
    },
    "/v1/items/{item_id.id}/use": {
      "get": {
        "summary": "Trigger action associated with the item usage.",
        "operationId": "UseItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/mruvUseItemResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "item_id.id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "MruVItemService"
        ]
      }
    }
  },
  "definitions": {
    "mruvContainer": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/mruvContainerID"
        },
        "type_id": {
          "$ref": "#/definitions/mruvContainerTypeID",
          "description": "ID of an container type."
        },
        "item_id": {
          "$ref": "#/definitions/mruvItemID",
          "description": "ID of container item representing container."
        },
        "items_inside": {
          "type": "integer",
          "format": "int64",
          "description": "Number of items inside container."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/mruvInsideItem"
          },
          "description": "List of items inside container."
        }
      },
      "description": "Container data structure."
    },
    "mruvContainerID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Container ID."
    },
    "mruvContainerType": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/mruvContainerTypeID"
        },
        "container_item_type_id": {
          "$ref": "#/definitions/mruvItemTypeID",
          "description": "ID of an item type."
        },
        "max_number": {
          "type": "integer",
          "format": "int64",
          "description": "Max items in the container."
        },
        "max_volume": {
          "type": "number",
          "format": "float",
          "description": "Max volume of items in the container."
        },
        "max_weight": {
          "type": "number",
          "format": "float",
          "description": "Max weight of items in the container."
        },
        "valid_item_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/mruvItemTypeID"
          }
        }
      },
      "description": "Container type data structure."
    },
    "mruvContainerTypeID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Container type ID."
    },
    "mruvGetContainerItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/mruvInsideItem"
          },
          "description": "List of items inside containers."
        }
      },
      "description": "Request message for `MruVItemsService.GetContainerItems`."
    },
    "mruvGetContainerTypesResponse": {
      "type": "object",
      "properties": {
        "container_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/mruvContainerType"
          },
          "description": "List of container types."
        }
      },
      "description": "Response message for `MruVItemsService.GetContainers`."
    },
    "mruvGetContainersResponse": {
      "type": "object",
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/mruvContainer"
          },
          "description": "List of containers."
        }
      },
      "description": "Response message for `MruVItemsService.GetContainers`."
    },
    "mruvGetItemTypesResponse": {
      "type": "object",
      "properties": {
        "item_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/mruvItemType"
          },
          "description": "List of item types."
        }
      },
      "description": "Response message for `MruVItemsService.GetItemTypes`."
    },
    "mruvGetItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/mruvItem"
          },
          "description": "List of items."
        }
      },
      "description": "Response message for `MruVItemsService.GetItems`."
    },
    "mruvGetNearestItemsResponse": {
      "type": "object",
      "properties": {
        "item": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/mruvInsideItem"
          },
          "description": "List of items sorted from nearest to farthest."
        }
      },
      "description": "Response message for `MruVItemsService.GetNearestItems`."
    },
    "mruvInsideItem": {
      "type": "object",
      "properties": {
        "container_id": {
          "$ref": "#/definitions/mruvContainerID",
          "description": "ID of container containing the item."
        },
        "item_id": {
          "$ref": "#/definitions/mruvItemID"
        },
        "item": {
          "$ref": "#/definitions/mruvItem"
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "Position representing order in container. In ascending manner."
        }
      },
      "description": "Item inside container data structure."
    },
    "mruvItem": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/mruvItemID"
        },
        "item_type_id": {
          "$ref": "#/definitions/mruvItemTypeID",
          "description": "ID of an item type."
        },
        "weight": {
          "type": "number",
          "format": "float",
          "description": "Current weight of the item."
        },
        "volume": {
          "type": "number",
          "format": "float",
          "description": "Current volume of the item."
        }
      },
      "description": "Item data structure."
    },
    "mruvItemID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Item ID."
    },
    "mruvItemType": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/mruvItemTypeID"
        },
        "name": {
          "type": "string",
          "description": "Short name of item type."
        },
        "description": {
          "type": "string",
          "description": "Description of item type."
        },
        "base_weight": {
          "type": "number",
          "format": "float",
          "description": "Default weight of items created with that item type."
        },
        "base_volume": {
          "type": "number",
          "format": "float",
          "description": "Default volume of items created with that item type."
        },
        "model_name": {
          "type": "string",
          "description": "GTA V model name."
        },
        "model_hash": {
          "type": "integer",
          "format": "int32",
          "description": "GTA V model hash."
        }
      },
      "title": "Item type data structure"
    },
    "mruvItemTypeID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Item type ID."
    },
    "mruvPosition": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "format": "double"
        },
        "y": {
          "type": "number",
          "format": "double"
        },
        "z": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "mruvPutItemResponse": {
      "type": "object",
      "properties": {
        "inside_item": {
          "$ref": "#/definitions/mruvInsideItem",
          "description": "Container with items inside."
        }
      },
      "title": "Response message for `MruVItemsService.PutItem`"
    },
    "mruvServiceStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "mruvSortItemsResponse": {
      "type": "object",
      "properties": {
        "container": {
          "$ref": "#/definitions/mruvContainer",
          "description": "Container with sorted items inside."
        }
      },
      "description": "Response message for `MruVItemsService.SortItems`."
    },
    "mruvSortingMode": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "WEIGHT_DESC",
        "WEIGHT_ASC",
        "VOLUME_DESC",
        "VOLUME_ASC"
      ],
      "default": "UNKNOWN",
      "description": "Sorting modes for container items.\n\n - UNKNOWN: undefined behaviour\n - WEIGHT_DESC: sort by weight descending\n - WEIGHT_ASC: sort by weight ascending\n - VOLUME_DESC: sort by volume descending\n - VOLUME_ASC: sort by volume ascending"
    },
    "mruvUseItemResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": "Is item usage was successful."
        }
      },
      "description": "Response message for `MruVItemsService.UseItem`."
    },
    "mruvVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "build_date": {
          "type": "string"
        },
        "commit": {
          "type": "string"
        },
        "os_arch": {
          "type": "string"
        }
      }
    }
  }
}
