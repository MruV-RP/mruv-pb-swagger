{
  "swagger": "2.0",
  "info": {
    "title": "gates/gates.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/gates": {
      "post": {
        "summary": "Create a gate or a moving objects objects group.",
        "operationId": "CreateGate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatesCreateGateResponse"
            }
          }
        },
        "tags": [
          "MruVGatesService"
        ]
      }
    },
    "/v1/gates/nearest": {
      "get": {
        "summary": "Find gate that is closest to a specific position.",
        "operationId": "FindNearestGate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatesFindNearestGateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "x",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "y",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "z",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "max_distance",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          }
        ],
        "tags": [
          "MruVGatesService"
        ]
      }
    },
    "/v1/gates/{id}": {
      "get": {
        "summary": "Get a gate or a moving objects objects group.",
        "operationId": "GetGate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatesGetGateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGatesService"
        ]
      },
      "delete": {
        "summary": "Delete a gate or a moving objects objects group.",
        "operationId": "DeleteGate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatesDeleteGateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGatesService"
        ]
      },
      "patch": {
        "summary": "Update a gate or a moving objects objects group.",
        "operationId": "UpdateGate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatesUpdateGateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGatesService"
        ]
      }
    },
    "/v1/gates/{id}/close": {
      "post": {
        "summary": "Close a gate.",
        "operationId": "Close",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatesCloseResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGatesService"
        ]
      }
    },
    "/v1/gates/{id}/lock": {
      "post": {
        "summary": "Lock a gate. Locked gate cannot be opened.",
        "operationId": "Lock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatesLockResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGatesService"
        ]
      }
    },
    "/v1/gates/{id}/open": {
      "post": {
        "summary": "Opens a gate.",
        "operationId": "Open",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatesOpenResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGatesService"
        ]
      }
    },
    "/v1/gates/{id}/unlock": {
      "post": {
        "summary": "Unload a gate, so it can be open.",
        "operationId": "Unlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gatesUnlockResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVGatesService"
        ]
      }
    }
  },
  "definitions": {
    "gatesCloseResponse": {
      "type": "object",
      "description": "Response message for rpc `Close`."
    },
    "gatesCreateGateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Response message for rpc `CreateGate`."
    },
    "gatesDeleteGateResponse": {
      "type": "object",
      "description": "Response message for rpc `DeleteGate`."
    },
    "gatesFindNearestGateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "distance": {
          "type": "number",
          "format": "float"
        }
      },
      "description": "Response message for rpc `FindNearestGate`."
    },
    "gatesGetGateResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "movable_objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectsMovableObject"
          },
          "description": "List of objects to move on gate close/open. Every object should have only 2 states: opened, closed."
        },
        "spot": {
          "$ref": "#/definitions/spotsSpot"
        },
        "opened": {
          "type": "boolean",
          "format": "boolean"
        },
        "locked": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "Response message for rpc `GetGate`."
    },
    "gatesLockResponse": {
      "type": "object",
      "description": "Response message for rpc `Lock`."
    },
    "gatesOpenResponse": {
      "type": "object",
      "description": "Response message for rpc `Open`."
    },
    "gatesUnlockResponse": {
      "type": "object",
      "description": "Response message for rpc `Unlock`."
    },
    "gatesUpdateGateResponse": {
      "type": "object",
      "description": "Response message for rpc `UpdateGate`."
    },
    "objectsMovableObject": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/objectsObject"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectsState"
          },
          "description": "List of states that an object can take."
        }
      },
      "description": "A movable object."
    },
    "objectsObject": {
      "type": "object",
      "properties": {
        "model": {
          "type": "integer",
          "format": "int64"
        },
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "z": {
          "type": "number",
          "format": "float"
        },
        "rx": {
          "type": "number",
          "format": "float"
        },
        "ry": {
          "type": "number",
          "format": "float"
        },
        "rz": {
          "type": "number",
          "format": "float"
        },
        "world_id": {
          "type": "integer",
          "format": "int32",
          "description": "Virtual world id for which object will be visible. Set -1 to be visible for all."
        },
        "interior_id": {
          "type": "integer",
          "format": "int32",
          "description": "Interior id for which object will be visible. Set -1 to be visible for all."
        },
        "player_id": {
          "type": "integer",
          "format": "int32",
          "description": "SA-MP player id for which object will be visible. Set -1 to be visible for all."
        },
        "area_id": {
          "type": "integer",
          "format": "int32",
          "description": "Dynamic area id for which object will be visible. Set -1 to be visible for all."
        },
        "stream_distance": {
          "type": "number",
          "format": "float",
          "title": "Default streamer setting is 300.0"
        },
        "draw_distance": {
          "type": "number",
          "format": "float",
          "title": "Default streamer setting is 0.0 = default game draw distance"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "SA-MP Dynamic object data structure."
    },
    "objectsState": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "z": {
          "type": "number",
          "format": "float"
        },
        "rx": {
          "type": "number",
          "format": "float"
        },
        "ry": {
          "type": "number",
          "format": "float"
        },
        "rz": {
          "type": "number",
          "format": "float"
        },
        "transition_speed": {
          "type": "number",
          "format": "float"
        }
      },
      "description": "Position and rotation state of moving object."
    },
    "spotsSpot": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "icon": {
          "type": "integer",
          "format": "int32"
        },
        "marker": {
          "type": "integer",
          "format": "int32"
        },
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "z": {
          "type": "number",
          "format": "float"
        },
        "vw": {
          "type": "integer",
          "format": "int32"
        },
        "int": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Spot."
    }
  }
}
