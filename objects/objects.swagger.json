{
  "swagger": "2.0",
  "info": {
    "title": "objects/objects.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/objects": {
      "get": {
        "summary": "Fetch all existing objects.",
        "operationId": "MruVObjectsService_FetchAllObjects",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/objectsFetchAllObjectsResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of objectsFetchAllObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "chunkSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "estateId",
            "description": "optional filter for estate id.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      },
      "post": {
        "summary": "Create an object.",
        "operationId": "MruVObjectsService_CreateObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsCreateObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/objectsCreateObjectRequest"
            }
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      }
    },
    "/v1/objects/removed": {
      "get": {
        "summary": "Get all removed objects.",
        "operationId": "MruVObjectsService_GetRemovedBuildings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsGetRemovedBuildingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "estateId",
            "description": "optional filter for estate id.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      },
      "post": {
        "summary": "Removes a object from GTA SA map.",
        "operationId": "MruVObjectsService_AddRemoveBuilding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsAddRemoveBuildingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/objectsAddRemoveBuildingRequest"
            }
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      }
    },
    "/v1/objects/removed/{id}": {
      "delete": {
        "summary": "Delete removed buildings.",
        "operationId": "MruVObjectsService_DeleteRemoveBuilding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsDeleteRemoveBuildingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      }
    },
    "/v1/objects/{id}": {
      "get": {
        "summary": "Get an object.",
        "operationId": "MruVObjectsService_GetObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsGetObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      },
      "delete": {
        "summary": "Delete an object.",
        "operationId": "MruVObjectsService_DeleteObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsDeleteObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      },
      "patch": {
        "summary": "Update an object.",
        "operationId": "MruVObjectsService_UpdateObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsUpdateObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/objectsUpdateObjectRequest"
            }
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      }
    },
    "/v1/objects/{objectId}/materialTexts": {
      "get": {
        "summary": "Get all object material texts.",
        "operationId": "MruVObjectsService_GetObjectMaterialTexts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsGetObjectMaterialTextsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      },
      "delete": {
        "summary": "Delete a material text assigned to an object.",
        "operationId": "MruVObjectsService_DeleteObjectMaterialText",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsDeleteObjectMaterialTextResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "index",
            "description": "The object's material index to delete (0 to 15).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      },
      "put": {
        "summary": "Add a material text to existing object.",
        "operationId": "MruVObjectsService_AddObjectMaterialText",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsAddObjectMaterialTextResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/objectsAddObjectMaterialTextRequest"
            }
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      }
    },
    "/v1/objects/{objectId}/materials": {
      "get": {
        "summary": "Get all object materials.",
        "operationId": "MruVObjectsService_GetObjectMaterials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsGetObjectMaterialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      },
      "put": {
        "summary": "Add a material to existing object.",
        "operationId": "MruVObjectsService_AddObjectMaterial",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsAddObjectMaterialResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/objectsAddObjectMaterialRequest"
            }
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      }
    },
    "/v1/objects/{objectId}/materials/{index}": {
      "delete": {
        "summary": "Delete a material assigned to an object.",
        "operationId": "MruVObjectsService_DeleteObjectMaterial",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsDeleteObjectMaterialResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "index",
            "description": "The material index on the object to delete (0 to 15).",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      }
    }
  },
  "definitions": {
    "objectsAddObjectMaterialRequest": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "integer",
          "format": "int64"
        },
        "index": {
          "type": "integer",
          "format": "int64",
          "title": "The material index on the object to change (0 to 15)"
        },
        "material": {
          "$ref": "#/definitions/objectsMaterial"
        }
      },
      "description": "Request message for rpc `AddObjectMaterial`."
    },
    "objectsAddObjectMaterialResponse": {
      "type": "object",
      "description": "Response message for rpc `AddObjectMaterial`."
    },
    "objectsAddObjectMaterialTextRequest": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "integer",
          "format": "int64"
        },
        "index": {
          "type": "integer",
          "format": "int64",
          "description": "The object's material index to replace with text (0 to 15)."
        },
        "materialText": {
          "$ref": "#/definitions/objectsMaterialText"
        }
      },
      "description": "Request message for rpc `AddObjectMaterialText`."
    },
    "objectsAddObjectMaterialTextResponse": {
      "type": "object",
      "description": "Response message for rpc `AddObjectMaterialText`."
    },
    "objectsAddRemoveBuildingRequest": {
      "type": "object",
      "properties": {
        "removedBuilding": {
          "$ref": "#/definitions/objectsRemovedBuilding"
        }
      },
      "description": "Request message for rpc `AddRemoveBuilding`."
    },
    "objectsAddRemoveBuildingResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Response message for rpc `AddRemoveBuilding`."
    },
    "objectsCreateObjectRequest": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/objectsObject"
        }
      },
      "description": "Request message for rpc `CreateObject`."
    },
    "objectsCreateObjectResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Response message for rpc `CreateObject`."
    },
    "objectsDeleteObjectMaterialResponse": {
      "type": "object",
      "description": "Response message for rpc `DeleteObjectMaterial`."
    },
    "objectsDeleteObjectMaterialTextResponse": {
      "type": "object",
      "description": "Response message for rpc `DeleteObjectMaterialText`."
    },
    "objectsDeleteObjectResponse": {
      "type": "object",
      "description": "Response message for rpc `DeleteObject`."
    },
    "objectsDeleteRemoveBuildingResponse": {
      "type": "object",
      "description": "Response message for rpc `DeleteRemoveBuilding`."
    },
    "objectsFetchAllObjectsResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/objectsObject"
          }
        }
      },
      "description": "Response message for rpc `FetchAll`."
    },
    "objectsGetObjectMaterialTextsResponse": {
      "type": "object",
      "properties": {
        "materialTexts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/objectsMaterialText"
          },
          "description": "Map of material texts, key - material index (0-15)."
        }
      },
      "description": "Response message for rpc `GetObjectMaterialTexts`."
    },
    "objectsGetObjectMaterialsResponse": {
      "type": "object",
      "properties": {
        "materials": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/objectsMaterial"
          },
          "title": "Map of materials, key - material index (0-15)"
        }
      },
      "description": "Response message for rpc `GetObjectMaterials`."
    },
    "objectsGetObjectResponse": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/objectsObject"
        }
      },
      "description": "Response message for rpc `GetObject`."
    },
    "objectsGetRemovedBuildingsResponse": {
      "type": "object",
      "properties": {
        "removedBuildings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectsRemovedBuilding"
          }
        }
      },
      "description": "Response message for rpc `GetRemovedBuildings`."
    },
    "objectsMaterial": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "integer",
          "format": "int32",
          "description": "The modelid on which the replacement texture is located. Use 0 for alpha. Use -1 to change the material color without altering the texture."
        },
        "txdName": {
          "type": "string",
          "title": "The name of the txd file which contains the replacement texture (use \"none\" if not required)"
        },
        "textureName": {
          "type": "string",
          "title": "The name of the texture to use as the replacement (use \"none\" if not required)"
        },
        "materialColor": {
          "type": "integer",
          "format": "int32",
          "description": "The object color to set, as an integer or hex in ARGB color format. Using 0 keeps the existing material color."
        }
      },
      "description": "Replace the texture of an object with the texture from another model in the game."
    },
    "objectsMaterialSize": {
      "type": "string",
      "enum": [
        "OBJECT_MATERIAL_SIZE_0",
        "OBJECT_MATERIAL_SIZE_32X32",
        "OBJECT_MATERIAL_SIZE_64X32",
        "OBJECT_MATERIAL_SIZE_64X64",
        "OBJECT_MATERIAL_SIZE_128X32",
        "OBJECT_MATERIAL_SIZE_128X64",
        "OBJECT_MATERIAL_SIZE_128X128",
        "OBJECT_MATERIAL_SIZE_256X32",
        "OBJECT_MATERIAL_SIZE_256X64",
        "OBJECT_MATERIAL_SIZE_256X128",
        "OBJECT_MATERIAL_SIZE_256X256",
        "OBJECT_MATERIAL_SIZE_512X64",
        "OBJECT_MATERIAL_SIZE_512X128",
        "OBJECT_MATERIAL_SIZE_512X256",
        "OBJECT_MATERIAL_SIZE_512X512"
      ],
      "default": "OBJECT_MATERIAL_SIZE_0"
    },
    "objectsMaterialText": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text to show on the object (MAX 2048 characters)."
        },
        "materialSize": {
          "$ref": "#/definitions/objectsMaterialSize",
          "description": "The size of the material (default: 256x128)."
        },
        "fontFace": {
          "type": "string",
          "description": "The font to use (default: Arial)."
        },
        "fontSize": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the text (default: 24) (MAX 255)."
        },
        "bold": {
          "type": "boolean",
          "description": "Bold text. Set to 1 for bold, 0 for not (default: 1)."
        },
        "fontColor": {
          "type": "integer",
          "format": "int32",
          "description": "The color of the text, in ARGB format (default: White)."
        },
        "backColor": {
          "type": "integer",
          "format": "int32",
          "description": "The background color, in ARGB format (default: None (transparent))."
        },
        "textAlignment": {
          "type": "integer",
          "format": "int32",
          "description": "The alignment of the text (default: left)."
        }
      },
      "description": "Replace the texture of an object with text."
    },
    "objectsObject": {
      "type": "object",
      "properties": {
        "model": {
          "type": "integer",
          "format": "int32"
        },
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "z": {
          "type": "number",
          "format": "float"
        },
        "rx": {
          "type": "number",
          "format": "float"
        },
        "ry": {
          "type": "number",
          "format": "float"
        },
        "rz": {
          "type": "number",
          "format": "float"
        },
        "worldId": {
          "type": "integer",
          "format": "int32",
          "description": "Virtual world id for which object will be visible. Set -1 to be visible for all."
        },
        "interiorId": {
          "type": "integer",
          "format": "int32",
          "description": "Interior id for which object will be visible. Set -1 to be visible for all."
        },
        "playerId": {
          "type": "integer",
          "format": "int32",
          "description": "SA-MP player id for which object will be visible. Set -1 to be visible for all."
        },
        "areaId": {
          "type": "integer",
          "format": "int32",
          "description": "Dynamic area id for which object will be visible. Set -1 to be visible for all."
        },
        "streamDistance": {
          "type": "number",
          "format": "float",
          "title": "Default streamer setting is 300.0"
        },
        "drawDistance": {
          "type": "number",
          "format": "float",
          "title": "Default streamer setting is 0.0 = default game draw distance"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "estateId": {
          "type": "integer",
          "format": "int64"
        },
        "materials": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/objectsMaterial"
          }
        },
        "materialTexts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/objectsMaterialText"
          }
        }
      },
      "description": "SA-MP Dynamic object data structure."
    },
    "objectsRemovedBuilding": {
      "type": "object",
      "properties": {
        "model": {
          "type": "integer",
          "format": "int64",
          "description": "The model to remove."
        },
        "x": {
          "type": "number",
          "format": "float",
          "description": "The X coordinate around which the objects will be removed."
        },
        "y": {
          "type": "number",
          "format": "float",
          "description": "The Y coordinate around which the objects will be removed."
        },
        "z": {
          "type": "number",
          "format": "float",
          "description": "The Z coordinate around which the objects will be removed."
        },
        "radius": {
          "type": "number",
          "format": "float",
          "description": "The radius around the specified point to remove objects with the specified model."
        },
        "estateId": {
          "type": "integer",
          "format": "int64",
          "description": "Estate to with removed object belong."
        }
      },
      "description": "Removes a standard San Andreas model for a single player within a specified range."
    },
    "objectsUpdateObjectRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "object": {
          "$ref": "#/definitions/objectsObject"
        }
      },
      "description": "Request message for rpc `UpdateObject`."
    },
    "objectsUpdateObjectResponse": {
      "type": "object",
      "description": "Response message for rpc `UpdateObject`."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
