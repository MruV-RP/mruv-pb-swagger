{
  "swagger": "2.0",
  "info": {
    "title": "objects/objects.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/object": {
      "post": {
        "summary": "Create an object.",
        "operationId": "CreateObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsCreateObjectResponse"
            }
          }
        },
        "tags": [
          "MruVObjectsService"
        ]
      }
    },
    "/v1/object/{id}": {
      "get": {
        "summary": "Get an object.",
        "operationId": "GetObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsGetObjectResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      }
    },
    "/v1/objects/{id}": {
      "delete": {
        "summary": "Delete an object.",
        "operationId": "DeleteObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsDeleteObjectResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      },
      "patch": {
        "summary": "Update an object.",
        "operationId": "UpdateObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/objectsUpdateObjectResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MruVObjectsService"
        ]
      }
    }
  },
  "definitions": {
    "objectsCreateObjectResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Response message for rpc `CreateObject`."
    },
    "objectsDeleteObjectResponse": {
      "type": "object",
      "description": "Response message for rpc `DeleteObject`."
    },
    "objectsGetObjectResponse": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/objectsObject"
        }
      },
      "description": "Response message for rpc `GetObject`."
    },
    "objectsObject": {
      "type": "object",
      "properties": {
        "model": {
          "type": "integer",
          "format": "int64"
        },
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "z": {
          "type": "number",
          "format": "float"
        },
        "rx": {
          "type": "number",
          "format": "float"
        },
        "ry": {
          "type": "number",
          "format": "float"
        },
        "rz": {
          "type": "number",
          "format": "float"
        },
        "world_id": {
          "type": "integer",
          "format": "int32",
          "description": "Virtual world id for which object will be visible. Set -1 to be visible for all."
        },
        "interior_id": {
          "type": "integer",
          "format": "int32",
          "description": "Interior id for which object will be visible. Set -1 to be visible for all."
        },
        "player_id": {
          "type": "integer",
          "format": "int32",
          "description": "SA-MP player id for which object will be visible. Set -1 to be visible for all."
        },
        "area_id": {
          "type": "integer",
          "format": "int32",
          "description": "Dynamic area id for which object will be visible. Set -1 to be visible for all."
        },
        "stream_distance": {
          "type": "number",
          "format": "float",
          "title": "Default streamer setting is 300.0"
        },
        "draw_distance": {
          "type": "number",
          "format": "float",
          "title": "Default streamer setting is 0.0 = default game draw distance"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "estate_id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "SA-MP Dynamic object data structure."
    },
    "objectsUpdateObjectResponse": {
      "type": "object",
      "description": "Response message for rpc `UpdateObject`."
    }
  }
}
